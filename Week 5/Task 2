Schedule Trigger (Time-Based Automation)

Apache Airflow:
from airflow import DAG
from airflow.operators.python_operator import PythonOperator
from datetime import datetime, timedelta

default_args = {
    'start_date': datetime(2024, 1, 1),
    'retries': 1,
    'retry_delay': timedelta(minutes=5)
}

dag = DAG('daily_pipeline', schedule_interval='0 2 * * *', default_args=default_args)
def process_data():
    print("Running daily ETL pipeline...")

task = PythonOperator(task_id='run_etl', python_callable=process_data, dag=dag)



Event Trigger (File/DB-based Automation)

Python + Watchdog:
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler
import time

class FileHandler(FileSystemEventHandler):
    def on_created(self, event):
        if event.src_path.endswith(".csv"):
            print(f"New file detected: {event.src_path}")
            # Trigger your ETL process here

path = "/data/incoming"
observer = Observer()
observer.schedule(FileHandler(), path=path, recursive=False)
observer.start()

try:
    while True:
        time.sleep(1)
except KeyboardInterrupt:
    observer.stop()
observer.join()
